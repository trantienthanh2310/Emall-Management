@using GUI.Areas.User.ViewModels
@using GUI.Extensions
@using System.Globalization
@model HomeCategoryViewModel
@section Header {
    @await Component.InvokeAsync("UserStickyHeader", "category")
}

@section MobileHeader {
    @await Component.InvokeAsync("MobileMenuHeader", "category")
}
@section Styles {
<style>
    .form-check-input {
        margin-top: 0.6rem;  
    }
</style>
}
<main class="main">
    <div class="page-header text-center" style="background-image: url('@Url.Content("~/assets/user/images/page-header-bg.jpg")')">
        <div class="container">
            <h1 class="page-title">All Categories<span>All shop</span></h1>
        </div><!-- End .container -->
    </div><!-- End .page-header -->
    <nav aria-label="breadcrumb" class="breadcrumb-nav mb-2">
        <div class="container">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/home">Home</a></li>
                <li class="breadcrumb-item"><a href="/home/categories">All Categories</a></li>
            </ol>
        </div><!-- End .container -->
    </nav><!-- End .breadcrumb-nav -->
    <div class="page-content">
        <div class="container" style="width: 90%">
            <div class="row">
                <div class="toolbox col-12">
        	        <div class="toolbox-left">
                        <a href="#" class="sidebar-toggler"><i class="icon-bars"></i>Filters</a>
                    </div><!-- End .toolbox-left -->
                    <div class="toolbox-center col-md-4">
                        <input type="text" class="form-control" placeholder="Search by name" id="input-search-product"><!-- End .toolbox-info -->
                    </div><!-- End .toolbox-center -->

                </div><!-- End .toolbox -->
            </div>
            <div class="products">
                <div class="row">
                    @foreach (var product in Model.Products)
                    {
                        <div class="col-6 col-md-4 col-lg-4 col-xl-3">
                            <div class="product">
                                <figure class="product-media">
                                    @if (product.Discount > 0)
                                    {
                                        <span class="product-label label-sale">@(product.Discount)% Off</span>
                                    }
                                    @if (product.IsNewProduct)
                                    {
                                        <span class="product-label label-new">New</span>
                                    }
                                    <a href="/product/index/@product.Id">
                                        <img src="@Url.ProductImageUrl(product.Images[0])" alt="@product.ProductName" class="product-image">
                                    </a>
                                    <div class="product-action">
                                        <a href="#" class="btn-product btn-cart" data-product="@product.Id">
                                            <span>add to cart</span>
                                        </a>
                                    </div><!-- End .product-action -->
                                </figure><!-- End .product-media -->
                                <div class="product-body">
                                    <div class="product-cat">
                                        <a href="/home/categories?cat=@product.CategoryId">@product.CategoryName</a>
                                    </div><!-- End .product-cat -->
                                    <h3 class="product-title">
                                        <a href="/product/index/@product.Id">@product.ProductName</a>
                                    </h3><!-- End .product-title -->
                                    <div class="product-price">
                                        @if (product.Discount > 0)
                                        {
                                            <span class="new-price">@((product.Price * (1 - (product.Discount / 100.0))).ToString("N0", CultureInfo.InvariantCulture))</span>
                                            <span class="old-price">@product.Price.ToString("N0", CultureInfo.InvariantCulture)</span>
                                        }
                                        else
                                        {
                                            <span class="new-price">@product.Price.ToString("N0", CultureInfo.InvariantCulture)</span>
                                        }
                                    </div><!-- End .product-price -->
                                    <div class="ratings-container">
                                        <div class="ratings">
                                            <div class="ratings-val" style="width: @(product.AverageRating * 20)%"></div><!-- End .ratings-val -->
                                        </div><!-- End .ratings -->
                                    </div><!-- End .rating-container -->
                                </div><!-- End .product-body -->
                            </div><!-- End .product -->
                        </div>
                    }
                </div>
            </div>
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center">
                    <li class="page-item@(Model.Products.HasPreviousPage ? "" : " disabled")">
                        <a class="page-link page-link-prev" href="#" aria-label="Previous" tabindex="-1" aria-disabled="true">
                            <span aria-hidden="true"><i class="icon-long-arrow-left"></i></span>Prev
                        </a>
                    </li>
                    @for (var i = 1; i <= @Model.Products.MaxPageNumber; i++)
                    {
                        if (i == Model.Products.PageNumber)
                        {
                            <li class="page-item active" aria-current="page">
                                <a class="page-link" href="#">@i</a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item">
                                <a class="page-link" href="#">@i</a>
                            </li>
                        }
                    }
                    <li class="page-item-total">of @Model.Products.MaxPageNumber</li>
                    <li class="page-item@(Model.Products.HasNextPage ? "" : " disabled")">
                        <a class="page-link page-link-next" href="#" aria-label="Next">
                            Next <span aria-hidden="true"><i class="icon-long-arrow-right"></i></span>
                        </a>
                    </li>
                </ul>
            </nav>
            <div class="sidebar-filter-overlay"></div>
            <aside class="sidebar-shop sidebar-filter">
                <div class="sidebar-filter-wrapper">
                    <div class="widget widget-clean">
                        <label>Filters</label>
                        <a href="#" class="sidebar-filter-clear">Clean All</a>
                    </div><!-- End .widget -->

                    <div class="widget widget-collapsible">
                        <h3 class="widget-title">
                            <a data-toggle="collapse" href="#widget-1" role="button" aria-expanded="true" aria-controls="widget-1">
                                Category
                            </a>
                        </h3><!-- End .widget-title -->
                        <div class="collapse show" id="widget-1">
                            <div class="widget-body">
                                <div class="filter-items filter-items-count">
                                    @foreach (var category in Model.Categories)
                                    { 
                                        <div class="filter-item">
                                            <div class="custom-control custom-checkbox">
                                                <input type="checkbox" class="custom-control-input" id="cat-@category.CategoryId" data-category="@category.CategoryId">
                                                <label class="custom-control-label" for="cat-@category.CategoryId">
                                                    @category.CategoryName
                                                </label>
                                            </div><!-- End .custom-checkbox -->
                                            <span class="item-count">@category.ProductCount</span>
                                        </div>
                                    }
                                </div><!-- End .filter-items -->
                            </div><!-- End .widget-body -->
                        </div><!-- End .collapse -->
                    </div><!-- End .widget -->

                    <div class="widget widget-collapsible">
                        <h3 class="widget-title">
                            <a data-toggle="collapse" href="#widget-2" role="button" aria-expanded="true" aria-controls="widget-2">
                                Price
                            </a>
                        </h3><!-- End .widget-title -->
                        <div class="collapse show" id="widget-2">
                            <div class="widget-body">
                                <div class="filter-items">
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio" name="sort" id="sort-asc" value="ascending">
                                        <label class="form-check-label" for="sort-asc" style="margin-left: 1.1rem">Ascending</label>
                                    </div><!-- End .filter-item -->
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio" name="sort" id="sort-desc" value="descending">
                                        <label class="form-check-label" for="sort-desc" style="margin-left: 1.1rem">Descending</label>
                                    </div><!-- End .filter-item -->
                                </div><!-- End .filter-items -->
                            </div><!-- End .widget-body -->
                        </div><!-- End .collapse -->
                    </div><!-- End .widget -->
                    <div class="row mx-2">
                        <button class="btn btn-primary" id="btn-filter">Filter</button>
                    </div>
                </div><!-- End .sidebar-filter-wrapper -->
            </aside><!-- End .sidebar-filter -->
        </div><!-- End .container -->
    </div><!-- End .page-content -->
</main><!-- End .main -->

@section Scripts {
    <script>
        $(document).ready(() => {
            let currentSelectedCategory = getCurrentPageInfo().categories;
            let keyword = getCurrentPageInfo().keyword;
            let sort = getCurrentPageInfo().orderBy;
            $('#input-search-product').val(keyword);
            $('.filter-item div.custom-control.custom-checkbox input[type=checkbox]')
                .each((_, element) => {
                    let categoryId = $(element).data('category').toString();
                    if (currentSelectedCategory.includes(categoryId)) {
                        $(element).attr('checked', true);
                    }
                });

            $(`.filter-items input.form-check-input[name="sort"][value="${sort}"]`).prop('checked', true);

            $('#btn-filter').click(() => {
                let keyword = $('#input-search-product').val().trim();
                let sort = $('.filter-items input.form-check-input[name="sort"]:checked').val();
                moveToPage(keyword, sort, 1);
            });

            $('.page-link').click(function (e) {
                e.preventDefault();
                let currentPageInfo = getCurrentPageInfo();
                if ($(this).hasClass('page-link-prev')) {
                    moveToPage(currentPageInfo.keyword, currentPageInfo.orderBy, currentPageInfo.pageNumber - 1);
                } else if ($(this).hasClass('page-link-next')) {
                    moveToPage(currentPageInfo.keyword, currentPageInfo.orderBy, currentPageInfo.pageNumber + 1);
                } else {
                    let selectedPageNumber = $(this).html();
                    moveToPage(currentPageInfo.keyword, currentPageInfo.orderBy, selectedPageNumber);
                }
            });

            $('#input-search-product').keypress(function (e) {
                if (e.which == 13) {
                    let keyword = $(this).val().trim();
                    search(keyword);
                }
            });
        });

        function getCurrentPageInfo() {
            let url = new URL(window.location.href);
            let queryObj = url.searchParams;
            let parsedQueryObj = groupParamsByKey(queryObj);
            let categories =
                Array.isArray(parsedQueryObj.cat)
                    ? parsedQueryObj.cat
                    : [parsedQueryObj.cat];
            return {
                pageNumber: parseInt(parsedQueryObj.pageNumber) || 1,
                categories: categories || [],
                keyword: parsedQueryObj.q || undefined,
                orderBy: parsedQueryObj.sort || undefined
            };
        }

        function moveToPage(keyword, sort, pageNumber) {
            let selectedCategoriesId = [];
            $('.filter-item div.custom-control.custom-checkbox input[type=checkbox]:checked').each((_, element) => {
                selectedCategoriesId.push($(element).data('category'));
            });
            let destinationUrl = '/home/categories?';
            if (keyword)
                destinationUrl += `q=${keyword}&`;
            if (sort)
                destinationUrl += `sort=${sort}&`;
            if (selectedCategoriesId.length == 0) { 
                destinationUrl += `pageNumber=${pageNumber}`;
            } else {
                destinationUrl += `cat=${selectedCategoriesId.shift()}`;
                if (selectedCategoriesId.length >= 1)
                    for (var categoryId of selectedCategoriesId)
                        destinationUrl += `&cat=${categoryId}`;
                destinationUrl += `&pageNumber=${pageNumber}`;
            }
            location.href = destinationUrl;
        }

        function search(keyword) {
            let selectedCategoriesId = [];
            $('.filter-item div.custom-control.custom-checkbox input[type=checkbox]:checked').each((_, element) => {
                selectedCategoriesId.push($(element).data('category'));
            });
            let destinationUrl = `/home/categories?q=${keyword}`;
            if (selectedCategoriesId.length > 0) {
                destinationUrl += `&cat=${selectedCategoriesId.shift()}`;
                if (selectedCategoriesId.length >= 1)
                    for (var categoryId of selectedCategoriesId)
                        destinationUrl += `&cat=${categoryId}`;
            }
            location.href = destinationUrl;
        }

        function groupParamsByKey(params) {
            return [...params.entries()]
                .reduce((accumulator, tuple) => {
                    const [key, value] = tuple;
                    if (accumulator.hasOwnProperty(key)) {
                        if (Array.isArray(accumulator[key])) {
                            accumulator[key] = [...accumulator[key], value];
                        } else {
                            accumulator[key] = [accumulator[key], value];
                        }
                    } else {
                        accumulator[key] = value;
                    }
                    return accumulator;
                }, {});
        }
    </script>
}
@using GUI.Areas.User.ViewModels
@using GUI.Extensions
@using System.Globalization
@model CartViewModel
@section Header {
    @await Component.InvokeAsync("UserStickyHeader", "home")
}
@section MobileHeader {
    @await Component.InvokeAsync("MobileMenuHeader", "home")
}

<main class="main">
    <div class="page-header text-center" style="background-image: url('@Url.Content("~/assets/user/images/page-header-bg.jpg")')">
        <div class="container">
            <h1 class="page-title">Shopping Cart<span>Shop</span></h1>
        </div><!-- End .container -->
    </div><!-- End .page-header -->
    <nav aria-label="breadcrumb" class="breadcrumb-nav">
        <div class="container">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/home">Home</a></li>
                <li class="breadcrumb-item active" aria-current="page"><a href="/cart">Shopping Cart</a></li>
            </ol>
        </div><!-- End .container -->
    </nav><!-- End .breadcrumb-nav -->

    <div class="page-content">
        <div class="cart">
            <div class="container" style="width: 90%; justify-content: center">
                <div class="row">
                    <div class="col-lg-9">
                        <table class="table table-cart table-mobile">
                            <thead>
                                <tr>
                                    <th>Product</th>
                                    <th>Price</th>
                                    <th>Quantity</th>
                                    <th>Total</th>
                                    <th></th>
                                </tr>
                            </thead>

                            <tbody>
                                @foreach (var item in Model.Items)
                                {
                                    @if (item.IsAvailable)
                                    {
                                        <tr data-product="@item.ProductId">
                                            <td class="product-col">
                                                <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault" style="margin-top: 20px;">
                                                <div class="product" style="margin-left: 10px;">
                                                    <figure class="product-media">
                                                        <a href="/product/index/@item.ProductId">
                                                            <img src="@Url.ProductImageUrl(item.Image)" alt="Product image">
                                                        </a>
                                                    </figure>

                                                    <h3 class="product-title">
                                                        <a href="/product/index/@item.ProductId">@item.ProductName</a>
                                                    </h3><!-- End .product-title -->
                                                </div><!-- End .product -->
                                            </td>
                                            <td class="price-col">@((item.Price * (1 - (item.Discount / 100.0))).ToString("N0", CultureInfo.InvariantCulture))</td>
                                            <td class="quantity-col">
                                                <div class="cart-product-quantity">
                                                    <input type="number" class="form-control" value="@item.Quantity" min="1" step="1" data-decimals="0" required>
                                                </div><!-- End .cart-product-quantity -->
                                            </td>
                                            <td class="total-col">@(((item.Price * (1 - (item.Discount / 100.0))) * item.Quantity).ToString("N0", CultureInfo.InvariantCulture))</td>
                                            <td class="remove-col"><button class="btn-remove"><i class="icon-close"></i></button></td>
                                        </tr>
                                    }
                                    else
                                    {
                                        <tr data-product="@item.ProductId" style="opacity: 0.3" data-toggle="tooltip" data-placement="top" title="Unavailable">
                                            <td class="product-col">
                                                <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault" style="margin-top: 20px;" disabled>
                                                <div class="product" style="margin-left: 10px;">
                                                    <figure class="product-media">
                                                        <img src="@Url.ProductImageUrl(item.Image)" alt="Product image">
                                                    </figure>

                                                    <h3 class="product-title">
                                                        @item.ProductName
                                                    </h3><!-- End .product-title -->
                                                </div><!-- End .product -->
                                            </td>
                                            <td class="price-col">@((item.Price * (1 - (item.Discount / 100.0))).ToString("N0", CultureInfo.InvariantCulture))</td>
                                            <td class="quantity-col">
                                                <div class="cart-product-quantity">
                                                    <input type="number" class="form-control" value="@item.Quantity" min="1" step="1" data-decimals="0" disabled>
                                                </div><!-- End .cart-product-quantity -->
                                            </td>
                                            <td class="total-col">@(((item.Price * (1 - (item.Discount / 100.0))) * item.Quantity).ToString("N0", CultureInfo.InvariantCulture))</td>
                                            <td class="remove-col"><button class="btn-remove"><i class="icon-close"></i></button></td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table><!-- End .table table-wishlist -->

                    </div><!-- End .col-lg-9 -->
                    <aside class="col-lg-3">
                        <div class="summary summary-cart">
                            <h3 class="summary-title">Cart Total</h3><!-- End .summary-title -->

                            <table class="table table-summary">
                                <tbody>
                                    <tr class="summary-subtotal">
                                        <td>Subtotal:</td>
                                        <td>@Model.Items.Sum(item => (item.Price * (1 - (item.Discount / 100.0))) * item.Quantity).ToString("N0", CultureInfo.InvariantCulture)</td>
                                    </tr>
                                </tbody>
                            </table><!-- End .table table-summary -->

                            <a href="#" class="btn btn-outline-primary-2 btn-order btn-block">PROCEED TO CHECKOUT</a>
                        </div><!-- End .summary -->

                        <a href="/" class="btn btn-outline-dark-2 btn-block mb-3"><span>CONTINUE SHOPPING</span><i class="icon-refresh"></i></a>
                    </aside><!-- End .col-lg-3 -->
                </div><!-- End .row -->
            </div><!-- End .container -->
        </div><!-- End .cart -->
    </div><!-- End .page-content -->
</main><!-- End .main -->
@if (TempData.ContainsKey("CheckingOut-Error"))
{
    var errorProductNames = TempData["CheckingOut-Error"] as string[];

    <p class="error-product-name" style="display: none">@string.Join(", ", errorProductNames)</p>

    @section CheckingOutErrors
    {
        <script>
            $(document).ready(() => {
                toastr.error(`Product(s) ${$('.error-product-name').text()} is not in sufficient quantity`);
                $('.error-product-name').remove();
            });
        </script>
    }
}